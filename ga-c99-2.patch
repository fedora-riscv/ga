commit b444960c8c993f3f5c51acf37451e418e819d007
Author: edoapra <edoardo.apra@gmail.com>
Date:   Fri Oct 9 15:16:04 2020 -0700

    more fixes for clang from Xcode 12

diff --git comex/src-common/acc.h comex/src-common/acc.h
index 3ef9884d..4d343384 100644
--- ga-5.7.2/comex/src-common/acc.h
+++ ga-5.7.2/comex/src-common/acc.h
@@ -23,24 +23,24 @@ typedef struct {
 #endif
 
 #if HAVE_BLAS
-void sscal(const int *n, const float  *a, const float  *x, const int *incx);
-void dscal(const int *n, const double *a, const double *x, const int *incx);
-void saxpy(const int *n,  const float *a,  const float *x,
-                 const int *incx, float *y, const int *incy);
-void daxpy(const int *n,  const double *a,  const double *x,
-                 const int *incX, double *Y, const int *incy);
-void caxpy(const int *n,  const void *a,  const void *x,
-                 const int *incX, void *Y, const int *incy);
-void zaxpy(const int *n,  const void *a,  const void *x,
-                 const int *incX, void *Y, const int *incy);
-void scopy(const int *n,  const float *x,
-                 const int *incx, float *y, const int *incy);
-void dcopy(const int *n,  const double *x,
-                 const int *incx, double *y, const int *incy);
-void ccopy(const int *n,  const void *x,
-                 const int *incx, void *y, const int *incy);
-void zcopy(const int *n,  const void *x,
-                 const int *incx, void *y, const int *incy);
+void sscal(const BLAS_INT *n, const float  *a, const float  *x, const BLAS_INT *incx);
+void dscal(const BLAS_INT *n, const double *a, const double *x, const BLAS_INT *incx);
+void BLAS_SAXPY(const BLAS_INT *n,  const float *a,  const float *x,
+                 const BLAS_INT *incx, float *y, const BLAS_INT *incy);
+void BLAS_DAXPY(const BLAS_INT *n,  const double *a,  const double *x,
+                 const BLAS_INT *incX, double *Y, const BLAS_INT *incy);
+void BLAS_CAXPY(const BLAS_INT *n,  const void *a,  const void *x,
+                 const BLAS_INT *incX, void *Y, const BLAS_INT *incy);
+void BLAS_ZAXPY(const BLAS_INT *n,  const void *a,  const void *x,
+                 const BLAS_INT *incX, void *Y, const BLAS_INT *incy);
+void BLAS_SCOPY(const BLAS_INT *n,  const float *x,
+                 const BLAS_INT *incx, float *y, const BLAS_INT *incy);
+void BLAS_DCOPY(const BLAS_INT *n,  const double *x,
+                 const BLAS_INT *incx, double *y, const BLAS_INT *incy);
+void BLAS_CCOPY(const BLAS_INT *n,  const void *x,
+                 const BLAS_INT *incx, void *y, const BLAS_INT *incy);
+void BLAS_ZCOPY(const BLAS_INT *n,  const void *x,
+                 const BLAS_INT *incx, void *y, const BLAS_INT *incy);
 #endif
 
 #define IADD_SCALE_REG(A,B,C) (A) += (B) * (C)
diff --git global/src/sclstubs.c global/src/sclstubs.c
index 6c932e0a..7665a708 100644
--- ga-5.7.2/global/src/sclstubs.c
+++ ga-5.7.2/global/src/sclstubs.c
@@ -47,6 +47,7 @@
 void pnga_lu_solve_alt(Integer tran, Integer g_a, Integer g_b) {
 #if HAVE_SCALAPACK
 #   if ENABLE_F77
+    void gai_lu_solve_alt_(Integer *tran, Integer *g_a, Integer *g_b);
     gai_lu_solve_alt_(&tran, &g_a, &g_b);
 #   else
     pnga_error("ga_lu_solve:scalapack interfaced, need configure --enable-f77",0L);
@@ -87,6 +88,7 @@ void pnga_lu_solve(char *tran, Integer g_a, Integer g_b) {
 Integer pnga_llt_solve(Integer g_a, Integer g_b) {
 #if HAVE_SCALAPACK
 #   if ENABLE_F77
+    Integer gai_llt_solve_(Integer *g_a, Integer *g_b);
     return gai_llt_solve_(&g_a, &g_b);
 #   else
     pnga_error("ga_lu_solve:scalapack interfaced, need configure --enable-f77",0L);
@@ -104,6 +106,7 @@ Integer pnga_llt_solve(Integer g_a, Integer g_b) {
 Integer pnga_solve(Integer g_a, Integer g_b) {
 #if HAVE_SCALAPACK
 #   if ENABLE_F77
+    Integer gai_solve_(Integer *g_a, Integer *g_b);
     return gai_solve_(&g_a, &g_b);
 #   else
     pnga_error("ga_lu_solve:scalapack interfaced, need configure --enable-f77",0L);
@@ -121,6 +124,7 @@ Integer pnga_solve(Integer g_a, Integer g_b) {
 Integer pnga_spd_invert(Integer g_a) {
 #if HAVE_SCALAPACK
 #   if ENABLE_F77
+    Integer gai_spd_invert_(Integer *g_a);
     return gai_spd_invert_(&g_a);
 #   else
     pnga_error("ga_lu_solve:scalapack interfaced, need configure --enable-f77",0L);
diff --git tcgmsg/capi.c tcgmsg/capi.c
index 1169d3f6..790e2088 100644
--- ga-5.7.2/tcgmsg/capi.c
+++ ga-5.7.2/tcgmsg/capi.c
@@ -135,6 +135,7 @@ long tcg_nodeid()
 }
 
 
+long NXTVAL_(long *mproc);
 long tcg_nxtval(long mproc)
 {
     long amproc = mproc;
diff --git tcgmsg/fapi.c tcgmsg/fapi.c
index 9cdf14f5..f9a17316 100644
--- ga-5.7.2/tcgmsg/fapi.c
+++ ga-5.7.2/tcgmsg/fapi.c
@@ -165,6 +165,7 @@ Integer  FATR _NODEID_()
 }
 
 
+long NXTVAL_(long *mproc);
 Integer  FATR _NXTVAL_(Integer *mproc)
 {
     long amproc = *mproc;
